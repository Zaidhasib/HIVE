-------------------MAP SIDE JOIN IN HIVE---------------------------
Map side join is the process where the joins happens on the map phase without the involvment of the reduce phase.

It is a useful feature when you are joining a big table with a small table. If we enable this feature , this small table wil be saved in the local cache of each node and 
then joined with the big tables in the map phase.

Dataset description of the first dataset is as follows:

id,first_name,last_name,email,gender,ip_address

Dataset description of the second dataset is as follows:

id,first_name,last_name


Here dataset2 is smaller in size than the dataset1.
 So that's why we will perform the map join on dataset2.
 

--------CREATE TABLE FOR dataset1-----------

CREATE TABLE IF NOT EXISTS dataset1 ( eid int, first_name String, last_name String, email String, gender String, ip_address String) 
row format delimited 
fields terminated BY ',' 
tblproperties("skip.header.line.count"="1");

-------------CREATE TABLE FOR Dataset 2-------------

CREATE TABLE IF NOT EXISTS dataset2 ( eid int, first_name String, last_name String)
 row format delimited 
 fields terminated BY ',' 
 tblproperties("skip.header.line.count"="1");
 
 ------LOADING THE DATA----------------------
 
 LOAD DATA LOCAL INPATH 'home/zaidhasib/dataset1.csv' INTO TABLE DATASET1;
 
 LOAD DATA LOCAL INPATH 'home/zaidhasib/dataset2.csv' INTO TABLE DATASET2;
 
 
 ---------PROPERTIES-----------------------------
 
 We have to set various properties before doing this join.
 
 set hive.auto.convert.join=true;
 (converting a common join into mapreduce job)
 
 set hive.auto.convert.join.nonconditionaltask=true;
 (it will convert the common join into the map oin based on the input size file)
 
 ---MAP JOIN-----
 
 SELECT dataset1.first_name, dataset1.eid,dataset2.eid FROM dataset1 JOIN dataset2 ON dataset1.first_name = dataset2.first_name;
 
 
 
 
 